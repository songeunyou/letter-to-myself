{"version":3,"sources":["media/letter.jpg","media/field.jpg","components/posNegList.js","components/Input.js","components/Info.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","list","negative","positive","secondNegative","Input","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rewrite","evt","keyCode","target","innerHTML","length","checkForText","textArr","toString","split","i","j","toLowerCase","splice","substring","match","punctuation","charAt","join","setState","html","state","placeholder","contentEditable","React","createRef","document","getElementById","focus","react_default","a","createElement","react_contenteditable_default","id","innerRef","disabled","onKeyDown","tagName","Component","Info","className","concat","visible","src","letter","onClick","toggleInfoBox","App","textExists","infoBox","bind","assertThisInitialized","title","subtitle","onmousemove","event","x","clientX","window","innerWidth","y","clientY","innerHeight","x2","y2","style","transform","e","date","Date","components_Info","getMonth","getDate","getFullYear","components_Input","Boolean","location","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yKCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sMCo8BzBC,SA97BJ,CAIP,CACIC,SAAU,MACVC,SAAU,uCAEd,CACID,SAAU,QACVC,SAAU,mDAEd,CACID,SAAU,MACVC,SAAU,mDAEd,CACID,SAAU,UACVC,SAAU,mDAEd,CACID,SAAU,WACVC,SAAU,iDAEd,CACID,SAAU,OACVC,SAAU,uCAEd,CACID,SAAU,QACVC,SAAU,wCAEd,CACID,SAAU,QACVC,SAAU,wCAEd,CACID,SAAU,UACVC,SAAU,yCAEd,CACID,SAAU,SACVC,SAAU,yCAEd,CACID,SAAU,UACVC,SAAU,QAEd,CACID,SAAU,UACVC,SAAU,cAEd,CACID,SAAU,MACVC,SAAU,yCAEd,CACID,SAAU,YACVC,SAAU,yCAEd,CACID,SAAU,YACVC,SAAU,6CAEd,CACID,SAAU,QACVC,SAAU,4CAEd,CACID,SAAU,UACVC,SAAU,uCAEd,CACID,SAAU,UACVC,SAAU,2CAEd,CACID,SAAU,SACVC,SAAU,iDAEd,CACID,SAAU,aACVC,SAAU,uDAEd,CACID,SAAU,UACVC,SAAU,+CAEd,CACID,SAAU,YACVC,SAAU,aAEd,CACID,SAAU,UACVC,SAAQ,uCAEZ,CACID,SAAU,SACVC,SAAU,mDAEd,CACID,SAAU,SACVC,SAAU,QAEd,CACID,SAAU,SACVC,SAAU,6DAEd,CACID,SAAU,YACVC,SAAU,+CAEd,CACID,SAAU,QACVC,SAAU,2CAEd,CACID,SAAU,UACVC,SAAU,yCAKd,CACID,SAAU,WACVC,SAAU,+CAEd,CACID,SAAU,QACVC,SAAU,2CAEd,CACID,SAAU,MACVC,SAAU,QAEd,CACID,SAAU,OACVC,SAAU,iDAEd,CACID,SAAU,UACVC,SAAU,+CAEd,CACID,SAAU,WACVC,SAAU,WAEd,CACID,SAAU,WACVC,SAAU,yCAEd,CACID,SAAU,YACVC,SAAU,+CAEd,CACID,SAAU,OACVC,SAAU,QAEd,CACID,SAAU,QACVC,SAAU,iDAEd,CACID,SAAU,UACVC,SAAU,gDAEd,CACID,SAAU,cACVC,SAAU,iDAEd,CACID,SAAU,YACVC,SAAU,iDAEd,CACID,SAAU,OACVC,SAAU,2CAEd,CACID,SAAU,WACVC,SAAU,2DAEd,CACID,SAAU,UACVC,SAAU,mDAEd,CACID,SAAU,SACVC,SAAU,kDAEd,CACID,SAAU,gBACVC,SAAU,qDAEd,CACID,SAAU,UACVC,SAAU,+DAEd,CACID,SAAU,OACVC,SAAU,+CAEd,CACID,SAAU,SACVC,SAAU,+CAEd,CACID,SAAU,OACVC,SAAU,cAEd,CACID,SAAU,SACVC,SAAU,cAEd,CACID,SAAU,cACVC,SAAU,aAEd,CACID,SAAU,gBACVC,SAAU,qDAEd,CACID,SAAU,QACVC,SAAU,qDAEd,CACID,SAAU,aACVC,SAAU,gDAEd,CACID,SAAU,YACVC,SAAU,iDAEd,CACID,SAAU,UACVC,SAAU,WAEd,CACID,SAAU,YACVC,SAAU,aAEd,CACID,SAAU,QACVC,SAAU,+CAEd,CACID,SAAU,OACVC,SAAU,kBAEd,CACID,SAAU,eACVC,SAAU,mDAEd,CACID,SAAU,MACVC,SAAU,uDAEd,CACID,SAAU,QACVC,SAAU,QAEd,CACID,SAAU,SACVC,SAAU,QAEd,CACID,SAAU,MACVC,SAAU,yCAEd,CACID,SAAU,OACVC,SAAU,YAEd,CACID,SAAU,OACVC,SAAU,cAEd,CACID,SAAU,OACVC,SAAU,uCAEd,CACID,SAAU,cACVC,SAAU,+CAEd,CACID,SAAU,WACVC,SAAU,2CAEd,CACID,SAAU,SACVC,SAAU,mDAEd,CACID,SAAU,OACVC,SAAU,mDAEd,CACID,SAAU,QACVC,SAAU,mDAEd,CACID,SAAU,UACVC,SAAU,WAEd,CACID,SAAU,WACVC,SAAU,SAEd,CACID,SAAU,cACVC,SAAU,YAEd,CACID,SAAU,QACVC,SAAU,mDAEd,CACID,SAAU,SACVC,SAAU,uCAEd,CACID,SAAU,WACVC,SAAU,WAEd,CACID,SAAU,aACVC,SAAU,YAEd,CACID,SAAU,YACVC,SAAU,0CAEd,CACID,SAAU,cACVC,SAAU,2CAEd,CACID,SAAU,SACVC,SAAU,kBAEd,CACID,SAAU,gBACVC,SAAU,cAEd,CACID,SAAU,QACVC,SAAU,2CAEd,CACID,SAAU,SACVC,SAAU,kDAEd,CACID,SAAU,UACVC,SAAU,qDAEd,CACID,SAAU,cACVC,SAAU,iDAEd,CACID,SAAU,WACVC,SAAU,2CAEd,CACID,SAAU,WACVC,SAAU,UAEd,CACID,SAAU,WACVC,SAAU,iDAEd,CACID,SAAU,SACVC,SAAU,+CAEd,CACID,SAAU,QACVC,SAAU,+CAEd,CACID,SAAU,WACVC,SAAU,SAEd,CACID,SAAU,OACVC,SAAU,6CAEd,CACID,SAAU,UACVC,SAAU,eAEd,CACID,SAAU,aACVC,SAAU,qDAEd,CACID,SAAU,SACVC,SAAU,cAEd,CACID,SAAU,aACVC,SAAU,+CAEd,CACID,SAAU,QACVC,SAAU,QAEd,CACID,SAAU,UACVC,SAAU,SAEd,CACID,SAAU,QACVC,SAAU,UAEd,CACID,SAAU,SACVC,SAAU,+CAEd,CACID,SAAU,eACVC,SAAU,cAEd,CACID,SAAU,eACVC,SAAU,cAEd,CACID,SAAU,YACVC,SAAU,YAEd,CACID,SAAU,QACVC,SAAU,WAEd,CACID,SAAU,eACVC,SAAU,YAEd,CACID,SAAU,WACVC,SAAU,2CAEd,CACID,SAAU,QACVC,SAAU,2CAEd,CACID,SAAU,OACVC,SAAU,SAEd,CACID,SAAU,QACVC,SAAU,SAEd,CACID,SAAU,WACVC,SAAU,qDAEd,CACID,SAAU,UACVC,SAAU,cAEd,CACID,SAAU,MACVC,SAAU,WAEd,CACID,SAAU,OACVE,eAAgB,KAChBD,SAAU,iDAKd,CACID,SAAU,UACVC,SAAU,mEAEd,CACID,SAAU,WACVC,SAAU,mEAEd,CACID,SAAU,QACVC,SAAU,cAEd,CACID,SAAU,SACVC,SAAU,kBAEd,CACID,SAAU,UACVC,SAAU,iDAEd,CACID,SAAU,SACVC,SAAU,QAEd,CACID,SAAU,OACVC,SAAQ,wCAEZ,CACID,SAAU,YACVC,SAAU,cAEd,CACID,SAAU,aACVC,SAAU,qDAEd,CACID,SAAU,eACVC,SAAU,iDAEd,CACID,SAAU,QACVC,SAAU,WAEd,CACID,SAAU,aACVC,SAAU,yCAEd,CACID,SAAU,UACVC,SAAU,kDAEd,CACID,SAAU,YACVC,SAAU,YAEd,CACID,SAAU,OACVC,SAAU,kDAEd,CACID,SAAU,MACVC,SAAU,uCAEd,CACID,SAAU,OACVC,SAAU,wCAEd,CACID,SAAU,QACVC,SAAU,YAEd,CACID,SAAU,SACVC,SAAU,0DAEd,CACID,SAAU,SACVC,SAAU,yDAEd,CACID,SAAU,QACVC,SAAU,uDAEd,CACID,SAAU,UACVC,SAAU,yDAEd,CACID,SAAU,UACVC,SAAU,uDAEd,CACID,SAAU,YACVC,SAAU,yDAEd,CACID,SAAU,OACVE,eAAgB,SAChBD,SAAU,mDAEd,CACID,SAAU,OACVE,eAAgB,WAChBD,SAAU,mDAEd,CACID,SAAU,KACVE,eAAgB,MAChBD,SAAU,eAEd,CACID,SAAU,SACVC,SAAU,eAEd,CACID,SAAU,QACVC,SAAU,UAEd,CACID,SAAU,MACVC,SAAU,UAEd,CACID,SAAU,QACVC,SAAU,UAEd,CACID,SAAU,QACVC,SAAU,UAEd,CACID,SAAU,OACVC,SAAU,WAEd,CACID,SAAU,aACVC,SAAU,+CAEd,CACID,SAAU,YACVC,SAAU,UAEd,CACID,SAAU,aACVC,SAAU,YAEd,CACID,SAAU,SACVC,SAAU,UAEd,CACID,SAAU,UACVC,SAAU,YAEd,CACID,SAAU,YACVC,SAAU,SAEd,CACID,SAAU,aACVC,SAAU,UAEd,CACID,SAAU,QACVC,SAAU,gDAEd,CACID,SAAU,YACVC,SAAU,+CAEd,CACID,SAAU,aACVC,SAAU,qDAEd,CACID,SAAU,OACVC,SAAU,gBAEd,CACID,SAAU,QACVC,SAAU,gBAEd,CACID,SAAU,YACVC,SAAU,iDAEd,CACID,SAAU,iBACVC,SAAU,+CAEd,CACID,SAAU,UACVC,SAAU,gBAEd,CACID,SAAU,KACVE,eAAgB,QAChBD,SAAU,iBAMd,CACID,SAAU,MACVC,SAAU,aAEd,CACID,SAAU,OACVC,SAAU,YAEd,CACID,SAAU,OACVC,SAAU,kDAEd,CACID,SAAU,QACVC,SAAU,wBAEd,CACID,SAAU,UACVC,SAAU,iDAEd,CACID,SAAU,OACVC,SAAU,mDAEd,CACID,SAAU,MACVC,SAAU,WAEd,CACID,SAAU,SACVC,SAAU,cAEd,CACID,SAAU,UACVC,SAAU,YAEd,CACID,SAAU,YACVC,SAAU,cAEd,CACID,SAAU,OACVC,SAAU,cAEd,CACID,SAAU,WACVC,SAAU,yDAEd,CACID,SAAU,UACVC,SAAU,yDAEd,CACID,SAAU,UACVC,SAAU,wDAEd,CACID,SAAU,SACVC,SAAU,wDAEd,CACID,SAAU,SACVC,SAAU,wDAEd,CACID,SAAU,OACVE,eAAgB,KAChBD,SAAU,IAEd,CACID,SAAU,OACVC,SAAU,uCAEd,CACID,SAAU,UACVC,SAAU,yCAEd,CACID,SAAU,QACVC,SAAU,cAEd,CACID,SAAU,SACVC,SAAU,eAEd,CACID,SAAU,SACVC,SAAU,YAEd,CACID,SAAU,QACVE,eAAgB,KAChBD,SAAU,8CAEd,CACID,SAAU,QACVC,SAAU,4CAEd,CACID,SAAU,UACVC,SAAU,QAEd,CACID,SAAU,WACVC,SAAU,SAEd,CACID,SAAU,QACVC,SAAU,2CAEd,CACID,SAAU,SACVC,SAAU,mDAEd,CACID,SAAU,QACVC,SAAU,2CAEd,CACID,SAAU,SACVC,SAAU,6CAEd,CACID,SAAU,WACVC,SAAU,iDAEd,CACID,SAAU,YACVC,SAAU,kDAKd,CACID,SAAU,UACVC,SAAU,IAEd,CACID,SAAU,OACVC,SAAU,IAEd,CACID,SAAU,SACVE,eAAgB,KAChBD,SAAU,gBAEd,CACID,SAAU,OACVC,SAAU,6CAEd,CACID,SAAU,SACVC,SAAU,yCAEd,CACID,SAAU,YACVC,SAAU,4CAKd,CACID,SAAU,MACVC,SAAU,IAEd,CACID,SAAU,KACVC,SAAU,IAEd,CACID,SAAU,QACVC,SAAU,MAEd,CACID,SAAU,SACVC,SAAU,OAEd,CACID,SAAU,QACVC,SAAU,OAEd,CACID,SAAU,QACVC,SAAU,IAEd,CAC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","file":"static/js/main.b8857472.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/letter.9afc38ef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/field.245862a9.jpg\";","// import hopeful from \"../media/hopeful.jpg\";\n// import beautiful from \"../media/beautiful.jpg\";\n// import workInProgress from \"../media/workinprogress.jpg\";\n// import calm from \"../media/calm.jpg\";\n// import calm2 from \"../media/calm2.jpg\";\n\nlet list = [\n\n    /*---------- feelings ----------*/\n\n    {\n        negative: \"bad\",\n        positive: '<div class=\"inline good\">good</div>'\n    },\n    {\n        negative: \"angry\",\n        positive: '<div class=\"inline openminded\">openminded</div>'\n    },\n    {\n        negative: \"mad\",\n        positive: '<div class=\"inline openminded\">openminded</div>'\n    },\n    {\n        negative: \"enraged\",\n        positive: '<div class=\"inline openminded\">thoughtful</div>'\n    },\n    {\n        negative: \"insecure\",\n        positive: '<div class=\"inline confident\">confident</div>'\n    },\n    {\n        negative: \"hate\",\n        positive: '<div class=\"inline love\">love</div>'\n    },\n    {\n        negative: \"hates\",\n        positive: '<div class=\"inline love\">loves</div>'\n    },\n    {\n        negative: \"hated\",\n        positive: '<div class=\"inline love\">loved</div>'\n    },\n    {\n        negative: \"hateful\",\n        positive: '<div class=\"inline love\">loving</div>'\n    },\n    {\n        negative: \"hating\",\n        positive: '<div class=\"inline love\">loving</div>'\n    },\n    {\n        negative: \"dislike\",\n        positive: \"like\"\n    },\n    {\n        negative: \"despise\",\n        positive: \"appreciate\"\n    },\n    {\n        negative: \"sad\",\n        positive: '<div class=\"inline happy\">happy</div>'\n    },\n    {\n        negative: \"miserable\",\n        positive: '<div class=\"inline happy\">happy</div>'\n    },\n    {\n        negative: \"depressed\",\n        positive: '<div class=\"inline hopeful\">hopeful</div>'\n    },\n    {\n        negative: \"worry\",\n        positive: '<div class=\"inline calm\">feel calm</div>'\n    },\n    {\n        negative: \"worried\",\n        positive: '<div class=\"inline calm\">calm</div>'\n    },\n    {\n        negative: \"anxious\",\n        positive: '<div class=\"inline secure\">secure</div>'\n    },\n    {\n        negative: \"scared\",\n        positive: '<div class=\"inline confident\">confident</div>'\n    },\n    {\n        negative: \"terrifying\",\n        positive: '<div class=\"inline exhilarating\">exhilarating</div>'\n    },\n    {\n        negative: \"jealous\",\n        positive: '<div class=\"inline admiring\">admiring</div>'\n    },\n    {\n        negative: \"resentful\",\n        positive: \"forgiving\"\n    },\n    {\n        negative: \"annoyed\",\n        positive: `<div class=\"inline calm\">calm</div>`\n    },\n    {\n        negative: \"afraid\",\n        positive: '<div class=\"inline not-afraid\">not afraid</div>'\n    },\n    {\n        negative: \"unsafe\",\n        positive: \"safe\"\n    },\n    {\n        negative: \"lonely\",\n        positive: '<div class=\"inline self-sufficient\">self-sufficient</div>'\n    },\n    {\n        negative: \"alienated\",\n        positive: '<div class=\"inline accepted\">accepted</div>'\n    },\n    {\n        negative: \"upset\",\n        positive: '<div class=\"inline happy\">content</div>'\n    },\n    {\n        negative: \"unhappy\",\n        positive: '<div class=\"inline happy\">happy</div>'\n    },\n\n    /*---------- descriptors ----------*/\n\n    {\n        negative: \"negative\",\n        positive: '<div class=\"inline positive\">positive</div>'\n    },\n    {\n        negative: \"worse\",\n        positive: '<div class=\"inline better\">better</div>'\n    },\n    {\n        negative: \"low\",\n        positive: \"high\"\n    },\n    {\n        negative: \"ugly\",\n        positive: '<div class=\"inline beautiful\">beautiful</div>'\n    },\n    {\n        negative: \"hideous\",\n        positive: '<div class=\"inline gorgeous\">gorgeous</div>'\n    },\n    {\n        negative: \"terrible\",\n        positive: \"amazing\"\n    },\n    {\n        negative: \"horrible\",\n        positive: '<div class=\"inline great\">great</div>'\n    },\n    {\n        negative: \"worthless\",\n        positive: '<div class=\"inline valuable\">valuable</div>'\n    },\n    {\n        negative: \"suck\",\n        positive: \"rock\"\n    },\n    {\n        negative: \"empty\",\n        positive: '<div class=\"inline valuable\">meaningful</div>'\n    },\n    {\n        negative: \"useless\",\n        positive: '<div class=\"inline valuable\">important</div>'\n    },\n    {\n        negative: \"unimportant\",\n        positive: '<div class=\"inline important\">important</div>'\n    },\n    {\n        negative: \"invisible\",\n        positive: '<div class=\"inline valuable\">invaluable</div>'\n    },\n    {\n        negative: \"weak\",\n        positive: '<div class=\"inline strong\">strong</div>'\n    },\n    {\n        negative: \"pathetic\",\n        positive: '<div class=\"inline courageous\">willing to improve</div>'\n    },\n    {\n        negative: \"awkward\",\n        positive: '<div class=\"inline courageous\">courageous</div>'\n    },\n    {\n        negative: \"boring\",\n        positive: '<div class=\"inline interesting\">engaging</div>'\n    },\n    {\n        negative: \"uninteresting\",\n        positive: '<div class=\"inline interesting\">interesting</div>'\n    },\n    {\n        negative: \"failure\",\n        positive: '<div class=\"inline work-in-progress\">work in progress</div>'\n    },\n    {\n        negative: \"fail\",\n        positive: '<div class=\"inline overcome\">overcome</div>'\n    },\n    {\n        negative: \"failed\",\n        positive: '<div class=\"inline overcome\">overcome</div>'\n    },\n    {\n        negative: \"dumb\",\n        positive: \"thoughtful\"\n    },\n    {\n        negative: \"stupid\",\n        positive: \"reasonable\"\n    },\n    {\n        negative: \"unfortunate\",\n        positive: \"fortunate\"\n    },\n    {\n        negative: \"uncomfortable\",\n        positive: '<div class=\"inline comfortable\">comfortable</div>'\n    },\n    {\n        negative: \"dirty\",\n        positive: '<div class=\"inline comfortable\">comfortable</div>'\n    },\n    {\n        negative: \"disgusting\",\n        positive: '<div class=\"inline appealing\">likeable</div>'\n    },\n    {\n        negative: \"revolting\",\n        positive: '<div class=\"inline appealing\">appealing</div>'\n    },\n    {\n        negative: \"disgust\",\n        positive: \"delight\"\n    },\n    {\n        negative: \"disgusted\",\n        positive: \"delighted\"\n    },\n    {\n        negative: \"gross\",\n        positive: '<div class=\"inline pleasant\">pleasant</div>'\n    },\n    {\n        negative: \"sick\",\n        positive: \"understandable\"\n    },\n    {\n        negative: \"unattractive\",\n        positive: '<div class=\"inline attractive\">attractive</div>'\n    },\n    {\n        negative: \"fat\",\n        positive: '<div class=\"inline good-looking\">good-looking</div>'\n    },\n    {\n        negative: \"small\",\n        positive: \"nice\"\n    },\n    {\n        negative: \"little\",\n        positive: \"nice\"\n    },\n    {\n        negative: \"big\",\n        positive: '<div class=\"inline great\">great</div>'\n    },\n    {\n        negative: \"flat\",\n        positive: \"pleasing\"\n    },\n    {\n        negative: \"lazy\",\n        positive: \"productive\"\n    },\n    {\n        negative: \"evil\",\n        positive: '<div class=\"inline good\">good</div>'\n    },\n    {\n        negative: \"dispensable\",\n        positive: '<div class=\"inline valuable\">valuable</div>'\n    },\n    {\n        negative: \"unworthy\",\n        positive: '<div class=\"inline worthy\">worthy</div>'\n    },\n    {\n        negative: \"tiring\",\n        positive: '<div class=\"inline refreshing\">refreshing</div>'\n    },\n    {\n        negative: \"hard\",\n        positive: '<div class=\"inline motivating\">motivating</div>'\n    },\n    {\n        negative: \"tough\",\n        positive: '<div class=\"inline motivating\">motivating</div>'\n    },\n    {\n        negative: \"painful\",\n        positive: \"healing\"\n    },\n    {\n        negative: \"inferior\",\n        positive: \"equal\"\n    },\n    {\n        negative: \"inferiority\",\n        positive: \"equality\"\n    },\n    {\n        negative: \"awful\",\n        positive: '<div class=\"inline incredible\">incredible</div>'\n    },\n    {\n        negative: \"uncool\",\n        positive: '<div class=\"inline cool\">cool</div>'\n    },\n    {\n        negative: \"careless\",\n        positive: \"careful\"\n    },\n    {\n        negative: \"degenerate\",\n        positive: \"valuable\"\n    },\n    {\n        negative: \"stressful\",\n        positive: '<div class=\"inline calm\">calming</div>'\n    },\n    {\n        negative: \"overwhelmed\",\n        positive: '<div class=\"inline strong\">strong</div>'\n    },\n    {\n        negative: \"unfair\",\n        positive: \"understandable\"\n    },\n    {\n        negative: \"disrespectful\",\n        positive: \"respectful\"\n    },\n    {\n        negative: \"weird\",\n        positive: '<div class=\"inline unique\">unique</div>'\n    },\n    {\n        negative: \"weirdo\",\n        positive: '<div class=\"inline unique\">unique person</div>'\n    },\n    {\n        negative: \"strange\",\n        positive: '<div class=\"inline distinctive\">distinctive</div>'\n    },\n    {\n        negative: \"undesirable\",\n        positive: '<div class=\"inline desirable\">desirable</div>'\n    },\n    {\n        negative: \"unwanted\",\n        positive: '<div class=\"inline wanted\">wanted</div>'\n    },\n    {\n        negative: \"arrogant\",\n        positive: \"humble\"\n    },\n    {\n        negative: \"isolated\",\n        positive: '<div class=\"inline comforted\">comforted</div>'\n    },\n    {\n        negative: \"bitter\",\n        positive: '<div class=\"inline grateful\">grateful</div>'\n    },\n    {\n        negative: \"jaded\",\n        positive: '<div class=\"inline grateful\">grateful</div>'\n    },\n    {\n        negative: \"retarded\",\n        positive: \"smart\"\n    },\n    {\n        negative: \"fake\",\n        positive: '<div class=\"inline genuine\">genuine</div>'\n    },\n    {\n        negative: \"selfish\",\n        positive: \"considerate\"\n    },\n    {\n        negative: \"inadequate\",\n        positive: '<div class=\"inline good-enough\">good enough</div>'\n    },\n    {\n        negative: \"flawed\",\n        positive: \"remarkable\"\n    },\n    {\n        negative: \"impossible\",\n        positive: '<div class=\"inline possible\">possible</div>'\n    },\n    {\n        negative: \"worst\",\n        positive: \"best\"\n    },\n    {\n        negative: \"distant\",\n        positive: \"close\"\n    },\n    {\n        negative: \"trash\",\n        positive: \"lovely\"\n    },\n    {\n        negative: \"broken\",\n        positive: '<div class=\"inline flawless\">flawless</div>'\n    },\n    {\n        negative: \"unflattering\",\n        positive: \"flattering\"\n    },\n    {\n        negative: \"unacceptable\",\n        positive: \"acceptable\"\n    },\n    {\n        negative: \"powerless\",\n        positive: \"powerful\"\n    },\n    {\n        negative: \"tired\",\n        positive: \"excited\"\n    },\n    {\n        negative: \"narcissistic\",\n        positive: \"selfless\"\n    },\n    {\n        negative: \"uncaring\",\n        positive: '<div class=\"inline caring\">caring</div>'\n    },\n    {\n        negative: \"cruel\",\n        positive: '<div class=\"inline caring\">caring</div>'\n    },\n    {\n        negative: \"dumb\",\n        positive: \"smart\"\n    },\n    {\n        negative: \"wrong\",\n        positive: \"right\"\n    },\n    {\n        negative: \"annoying\",\n        positive: '<div class=\"inline interesting\">interesting</div>'\n    },\n    {\n        negative: \"problem\",\n        positive: \"resolution\"\n    },\n    {\n        negative: \"end\",\n        positive: \"improve\"\n    },\n    {\n        negative: \"give\",\n        secondNegative: \"up\",\n        positive: '<div class=\"inline persevere\">persevere</div>'\n    },\n\n    /*---------- words ----------*/\n\n    {\n        negative: \"trigger\",\n        positive: '<div class=\"inline source-of-strength\">source of strength</div>'\n    },\n    {\n        negative: \"triggers\",\n        positive: '<div class=\"inline source-of-strength\">source of strength</div>'\n    },\n    {\n        negative: \"anger\",\n        positive: \"reflection\"\n    },\n    {\n        negative: \"threat\",\n        positive: \"harmless thing\"\n    },\n    {\n        negative: \"killing\",\n        positive: '<div class=\"inline improving\">improving</div>'\n    },\n    {\n        negative: \"hatred\",\n        positive: \"love\"\n    },\n    {\n        negative: \"pain\",\n        positive: `<div class=\"inline calm2\">calm</div>`\n    },\n    {\n        negative: \"addiction\",\n        positive: \"preference\"\n    },\n    {\n        negative: \"insecurity\",\n        positive: '<div class=\"inline self-esteem\">self-esteem</div>'\n    },\n    {\n        negative: \"insecurities\",\n        positive: '<div class=\"inline self-esteem\">virtues</div>'\n    },\n    {\n        negative: \"doubt\",\n        positive: \"believe\"\n    },\n    {\n        negative: \"unbearable\",\n        positive: '<div class=\"inline great\">great</div>'\n    },\n    {\n        negative: \"anxiety\",\n        positive: '<div class=\"inline confident\">confidence</div>'\n    },\n    {\n        negative: \"anxieties\",\n        positive: \"feelings\"\n    },\n    {\n        negative: \"fear\",\n        positive: '<div class=\"inline confident\">confidence</div>'\n    },\n    {\n        negative: \"die\",\n        positive: '<div class=\"inline live\">live</div>'\n    },\n    {\n        negative: \"dead\",\n        positive: '<div class=\"inline live\">alive</div>'\n    },\n    {\n        negative: \"waste\",\n        positive: \"good use\"\n    },\n    {\n        negative: \"burden\",\n        positive: '<div class=\"inline great-person\">valuable person</div>'\n    },\n    {\n        negative: \"fuckup\",\n        positive: '<div class=\"inline great-person\">capable person</div>'\n    },\n    {\n        negative: \"loser\",\n        positive: '<div class=\"inline great-person\">great person</div>'\n    },\n    {\n        negative: \"asshole\",\n        positive: '<div class=\"inline great-person\">amazing person</div>'\n    },\n    {\n        negative: \"jackass\",\n        positive: '<div class=\"inline great-person\">great person</div>'\n    },\n    {\n        negative: \"breakdown\",\n        positive: '<div class=\"inline re-adjustment\">re-adjustment</div>'\n    },\n    {\n        negative: \"kill\",\n        secondNegative: \"myself\",\n        positive: '<div class=\"inline get-better\">get better</div>'\n    },\n    {\n        negative: \"kill\",\n        secondNegative: \"yourself\",\n        positive: '<div class=\"inline get-better\">get better</div>'\n    },\n    {\n        negative: \"no\",\n        secondNegative: \"one\",\n        positive: \"many people\"\n    },\n    {\n        negative: \"nobody\",\n        positive: \"many people\"\n    },\n    {\n        negative: \"idiot\",\n        positive: \"person\"\n    },\n    {\n        negative: \"bum\",\n        positive: \"person\"\n    },\n    {\n        negative: \"freak\",\n        positive: \"person\"\n    },\n    {\n        negative: \"flaws\",\n        positive: \"quirks\"\n    },\n    {\n        negative: \"lies\",\n        positive: \"honesty\"\n    },\n    {\n        negative: \"resentment\",\n        positive: '<div class=\"inline accept\">acceptance</div>'\n    },\n    {\n        negative: \"flashback\",\n        positive: \"memory\"\n    },\n    {\n        negative: \"flashbacks\",\n        positive: \"memories\"\n    },\n    {\n        negative: \"trauma\",\n        positive: \"memory\"\n    },\n    {\n        negative: \"traumas\",\n        positive: \"memories\"\n    },\n    {\n        negative: \"nightmare\",\n        positive: \"dream\"\n    },\n    {\n        negative: \"nightmares\",\n        positive: \"dreams\"\n    },\n    {\n        negative: \"shame\",\n        positive: '<div class=\"inline courageous\">courage</div>'\n    },\n    {\n        negative: \"rejection\",\n        positive: '<div class=\"inline accept\">acceptance</div>'\n    },\n    {\n        negative: \"depression\",\n        positive: '<div class=\"inline mindfulness\">mindfulness</div>'\n    },\n    {\n        negative: \"jerk\",\n        positive: \"great person\"\n    },\n    {\n        negative: \"jerks\",\n        positive: \"great people\"\n    },\n    {\n        negative: \"conscious\",\n        positive: '<div class=\"inline confident\">confident</div>'\n    },\n    {\n        negative: \"disappointment\",\n        positive: '<div class=\"inline blessing\">blessing</div>'\n    },\n    {\n        negative: \"suicide\",\n        positive: \"getting help\"\n    },\n    {\n        negative: \"my\",\n        secondNegative: \"fault\",\n        positive: \"in my control\"\n    },\n\n\n    /*---------- verbs ----------*/\n\n    {\n        negative: \"lie\",\n        positive: \"be honest\"\n    },\n    {\n        negative: \"lied\",\n        positive: \"confided\"\n    },\n    {\n        negative: \"hurt\",\n        positive: '<div class=\"inline strong\">much stronger</div>'\n    },\n    {\n        negative: \"hurts\",\n        positive: \"gives strength to me\"\n    },\n    {\n        negative: \"hurting\",\n        positive: '<div class=\"inline improving\">improving</div>'\n    },\n    {\n        negative: \"harm\",\n        positive: '<div class=\"inline improving\">improvement</div>'\n    },\n    {\n        negative: \"cry\",\n        positive: \"reflect\"\n    },\n    {\n        negative: \"crying\",\n        positive: \"reflecting\"\n    },\n    {\n        negative: \"dismiss\",\n        positive: \"consider\"\n    },\n    {\n        negative: \"dismissed\",\n        positive: \"considered\"\n    },\n    {\n        negative: \"mock\",\n        positive: \"compliment\"\n    },\n    {\n        negative: \"damaging\",\n        positive: '<div class=\"inline strengthening\">strengthening</div>'\n    },\n    {\n        negative: \"ruining\",\n        positive: '<div class=\"inline strengthening\">strengthening</div>'\n    },\n    {\n        negative: \"damaged\",\n        positive: '<div class=\"inline strengthening\">strengthened</div>'\n    },\n    {\n        negative: \"ruined\",\n        positive: '<div class=\"inline strengthening\">strengthened</div>'\n    },\n    {\n        negative: \"eroded\",\n        positive: '<div class=\"inline strengthening\">strengthened</div>'\n    },\n    {\n        negative: \"lack\",\n        secondNegative: \"of\",\n        positive: \"\"\n    },\n    {\n        negative: \"lack\",\n        positive: '<div class=\"inline have\">have</div>'\n    },\n    {\n        negative: \"lacking\",\n        positive: '<div class=\"inline have\">having</div>'\n    },\n    {\n        negative: \"keeps\",\n        positive: \"encourages\"\n    },\n    {\n        negative: \"wasted\",\n        positive: \"made use of\"\n    },\n    {\n        negative: \"killed\",\n        positive: \"improved\"\n    },\n    {\n        negative: \"cheat\",\n        secondNegative: \"on\",\n        positive: '<div class=\"inline commit\">commit to</div>'\n    },\n    {\n        negative: \"cheat\",\n        positive: '<div class=\"inline commit\">love me</div>'\n    },\n    {\n        negative: \"pretend\",\n        positive: \"want\"\n    },\n    {\n        negative: \"pretends\",\n        positive: \"wants\"\n    },\n    {\n        negative: \"avoid\",\n        positive: '<div class=\"inline accept\">accept</div>'\n    },\n    {\n        negative: \"suffer\",\n        positive: '<div class=\"inline get-better\">get better</div>'\n    },\n    {\n        negative: \"judge\",\n        positive: '<div class=\"inline accept\">accept</div>'\n    },\n    {\n        negative: \"judged\",\n        positive: '<div class=\"inline accept\">accepted</div>'\n    },\n    {\n        negative: \"struggle\",\n        positive: '<div class=\"inline persevere\">persevere</div>'\n    },\n    {\n        negative: \"struggled\",\n        positive: '<div class=\"inline persevere\">persevered</div>'\n    },\n\n    /*---------- swears ----------*/\n\n    {\n        negative: \"fucking\",\n        positive: \"\"\n    },\n    {\n        negative: \"fuck\",\n        positive: \"\"\n    },\n    {\n        negative: \"fucked\",\n        secondNegative: \"up\",\n        positive: \"constructive\"\n    },\n    {\n        negative: \"shit\",\n        positive: '<div class=\"inline happy\">happiness</div>'\n    },\n    {\n        negative: \"shitty\",\n        positive: '<div class=\"inline great\">great</div>'\n    },\n    {\n        negative: \"shittiest\",\n        positive: '<div class=\"inline great\">greatest</div>'\n    },\n\n    /*---------- negations ----------*/\n\n    {\n        negative: \"not\",\n        positive: \"\"\n    },\n    {\n        negative: \"no\",\n        positive: \"\"\n    },\n    {\n        negative: \"isn't\",\n        positive: \"is\"\n    },\n    {\n        negative: \"didn't\",\n        positive: \"did\"\n    },\n    {\n        negative: \"didnt\",\n        positive: \"did\"\n    },\n    {\n        negative: \"don't\",\n        positive: \"\"\n    },\n    {\n        negative: \"dont\",\n        positive: \"\"\n    },\n    {\n        negative: \"haven't\",\n        positive: \"have\"\n    },\n    {\n        negative: \"havent\",\n        positive: \"have\"\n    },\n    {\n        negative: \"won't\",\n        positive: \"will\"\n    },\n    {\n        negative: \"just\",\n        positive: \"\"\n    },\n    {\n        negative: \"aren't\",\n        positive: \"are\"\n    },\n    {\n        negative: \"can't\",\n        positive: \"can\"\n    },\n    {\n        negative: \"cant\",\n        positive: \"can\"\n    },\n    {\n        negative: \"must\",\n        positive: \"can\"\n    },\n    {\n        negative: \"wasn't\",\n        positive: \"was\"\n    },\n    {\n        negative: \"doesn't\",\n        positive: \"does\"\n    },\n    {\n        negative: \"wouldn't\",\n        positive: \"would\"\n    },\n    {\n        negative: \"nothing\",\n        positive: \"not everything\"\n    },\n    {\n        negative: \"better\",\n        positive: \"different\"\n    },\n    {\n        negative: \"always\",\n        positive: \"sometimes\"\n    },\n    {\n        negative: \"none\",\n        positive: \"some\"\n    },\n    {\n        negative: \"any\",\n        positive: \"some\"\n    },\n    {\n        negative: \"but\",\n        positive: \"and\"\n    },\n    {\n        negative: \"never\",\n        positive: \"\"\n    },\n    {\n        negative: \"yet\",\n        positive: \"\"\n    },\n    {\n        negative: \"ever\",\n        positive: \"\"\n    },\n    {\n        negative: \"anymore\",\n        positive: \"\"\n    },\n]\n\nexport default list;\n","import React, { Component } from 'react';\nimport ContentEditable from 'react-contenteditable';\nimport '../css/Input.css';\n\nimport list from './posNegList';\n\nclass Input extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            placeholder: \"What is your negative self talk?\",\n            html: \"\"\n        };\n\n        this.contentEditable = React.createRef();\n    }\n\n    componentDidMount() {\n        document.getElementById(\"start-typing\").focus();\n    }\n\n    rewrite = evt => {\n        if (evt.keyCode === 8 || evt.keyCode === 46) {\n            if (evt.target.innerHTML.length === 0) {\n                this.props.checkForText(false);\n            } else {\n                this.props.checkForText(true);\n            }\n        } else {\n            this.props.checkForText(true);\n        }\n\n        let textArr = evt.target.innerHTML.toString().split(\" \");\n\n        for (let i = 0; i < textArr.length - 2; i++) {\n            for (let j = 0; j < list.length; j++) {\n                if (textArr[i].toLowerCase() === list[j].negative) {\n                    if (textArr[i + 1] && list[j].secondNegative && (textArr[i + 1] === list[j].secondNegative)) {\n                        // first detecting two-word phrases\n                        textArr.splice(i, 2, list[j].positive)\n                    } else if (!list[j].secondNegative) { // ensures that we're not detecting and swapping partial phrases\n                        textArr[i] = list[j].positive;\n                    }\n                } else if (textArr[i].substring(textArr[i].length - 1, textArr[i].length).match(/^[.,:!?)]/) && textArr[i].substring(0, textArr[i].length - 1).toLowerCase() === list[j].negative && !list[j].secondNegative) {\n                    // detecting words followed by punctuation -> swap while keeping the punctuation\n                    let punctuation = textArr[i].substring(textArr[i].length - 1, textArr[i].length);\n                    textArr[i] = list[j].positive + punctuation;\n                }\n            }\n\n            // changing from \"a\" to \"an\" after wordswap\n            if (textArr[i - 1] === \"a\" &&\n                (textArr[i].charAt(0) === \"a\" || textArr[i].charAt(0) === \"e\" || textArr[i].charAt(0) === \"i\" || textArr[i].charAt(0) === \"o\" || textArr[i].charAt(0) === \"u\")) {\n                    textArr[i - 1] = \"an\"\n\n            // changing from \"an\" to \"a\" after wordswap\n            } else if (textArr[i - 1] === \"an\" &&\n                !(textArr[i].charAt(0) === \"a\" || textArr[i].charAt(0) === \"e\" || textArr[i].charAt(0) === \"i\" || textArr[i].charAt(0) === \"o\" || textArr[i].charAt(0) === \"u\")) {\n                    textArr[i - 1] = \"a\"\n                }\n            }\n\n        let p = textArr.join(' ');\n\n        this.setState({html: p});\n    };\n\n\n    render() {\n\n        return <ContentEditable\n                id=\"start-typing\"\n                innerRef={this.contentEditable}\n                html={this.state.html} // innerHTML of the editable div\n                disabled={false}       // use true to disable editing\n                onKeyDown={this.rewrite}\n                tagName='article' // Use a custom HTML tag (uses a div by default)\n                />\n    }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport '../css/Info.css';\nimport '../css/App.css';\n\nimport field from '../media/field.jpg';\nimport letter from '../media/letter.jpg';\n\nclass Info extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n        };\n    }\n\n    render() {\n        return (\n            <div className={\"info-box \" + `${this.props.visible ? \"visible\" : \"invisible\"}`}>\n                <div className=\"row\">\n                    <div className=\"image-container\">\n                        <h3>How does this work?</h3>\n                        <div className=\"image-box\">\n                            <img className=\"info-image\" src={letter}/>\n                            <div className=\"gradient-box\"/>\n                        </div>\n                    </div>\n\n                    <div className=\"description\">\n                        <p>You know you deserve compassion, but it's difficult to tell yourself kind things when you're in a bad place.</p>\n                        <p>It's okay. Say the hurtful, ugly things. The negative words with be replaced with positive ones so that in the end you've written an incredible love letter to yourself.</p>\n                    </div>\n                </div>\n\n                <div className=\"row-lined\">\n                    <div className=\"before\">\n                        <p className=\"title\">What you type:</p>\n                        I felt pretty bad today. I hate how I look and it made me feel really anxious to go outside. I don't want people seeing my ugly face and fat body. I just want to give up.\n                    </div>\n                    <div className=\"after\">\n                        <p className=\"title\">What you mean to say:</p>\n                        I felt pretty <div className=\"inline good\">good</div> today. I <div className=\"inline love\">love</div> how I look and it made me feel really <div className=\"inline secure\">secure</div> to go outside. I want people seeing my <div className=\"inline beautiful\">beautiful</div> face and <div className=\"inline good-looking\">good-looking</div> body. I want to <div className=\"inline persevere\">persevere</div>.\n                    </div>\n                </div>\n\n                <div className=\"about\">\n                </div>\n\n                <div className=\"exit\" onClick={this.props.toggleInfoBox}>&#8251; Close</div>\n            </div>\n        )\n    }\n}\n\nexport default Info;\n","import React, { Component } from 'react';\nimport './css/App.css';\n\nimport letter from './media/letter.jpg';\n\nimport Input from './components/Input';\nimport Info from './components/Info';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            textExists: false,\n            infoBox: false,\n        };\n\n        this.checkForText = this.checkForText.bind(this);\n        this.infoBox = this.infoBox.bind(this);\n    }\n\n    componentDidMount() {\n        var title = document.getElementById(\"title\");\n        var subtitle = document.getElementById(\"subtitle\");\n\n        document.onmousemove = function(event) {\n            var x = (event.clientX / window.innerWidth) * 6 - 4;\n            var y = (event.clientY / window.innerHeight) * 18 - 4;\n\n            var x2 = (event.clientX / window.innerWidth) * 1.5 - 2;\n            var y2 = (event.clientY / window.innerHeight) * 8 - 6;\n\n            title.style.transform = \"translate(\"+x+\"%,\"+y+\"%)\";\n            subtitle.style.transform = \"translate(\"+x2+\"%,\"+y2+\"%)\";\n        }\n    }\n\n    checkForText(e) {\n        this.setState({\n            textExists: e\n        });\n    }\n\n    infoBox() {\n\n        if (this.state.infoBox === true) {\n            this.setState({infoBox: false});\n        } else {\n            this.setState({infoBox: true});\n        }\n    }\n\n    render() {\n\n        let date = new Date();\n        const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n            \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n\n        return (\n            <div className=\"App\">\n                <Info\n                    visible={this.state.infoBox}\n                    toggleInfoBox={this.infoBox}/>\n\n                <div id=\"header\" className={this.state.infoBox ? \"hide-header\" : \"\"}>\n                    <div className=\"title-box\">\n                        <h1 id=\"title\">Letter to Myself</h1>\n                    </div>\n\n                    <div id=\"background-photo\">\n                        <img id=\"photo\" src={letter}/>\n                        <div className=\"subtitle-box\">\n                            <h2 id=\"subtitle\">Sometimes we're too hard on ourselves. Write out your negative self talk—let's try to change it up</h2>\n                        </div>\n                        <div className=\"gradient-box\"/>\n                    </div>\n\n                    <div className=\"date\">{monthNames[date.getMonth()] + \" \" + date.getDate() + \", \" + date.getFullYear()}</div>\n                    <div className=\"info-btn\" onClick={this.infoBox}>&#8251; How does this work?</div>\n                </div>\n\n                <div id=\"input-box\" className={this.state.infoBox ? \"hide-input\" : \"\"}>\n                    <Input checkForText={this.checkForText}/>\n                    {this.state.textExists ? \"\" : <div id=\"placeholder\">Start typing...</div>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}